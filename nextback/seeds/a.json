[
  {
    "title": "C Programming Tutorial",
    "description": "This is a C programming tutorial and this is for learning C.",
    "slug": "c-programming-tutorial",
    "date": "2025-03-02",
    "author": "Harry",
    "image": "/typescript.webp",
    "content": [
      {
        "section": "Introduction to C",
        "content": "C is a powerful general-purpose programming language that is widely used in system programming, embedded systems, and applications requiring high performance. It is known for its efficiency, close-to-hardware control, and portability, making it a crucial language in the software industry."
      },
      {
        "section": "Why Learn C?",
        "content": [
          "Foundation for Other Languages: C provides the building blocks for many modern languages, such as C++, Java, and Python.",
          "Performance: C is highly efficient and is used in performance-critical applications.",
          "Low-level Control: C allows you to work closely with memory and hardware, providing more control over system resources."
        ]
      },
      {
        "section": "Setting Up C",
        "steps": [
          "Install a C Compiler: You can use GCC (GNU Compiler Collection) for Linux/macOS or MinGW for Windows. Both are free and widely used.",
          "Choose an IDE/Text Editor: Popular options include Visual Studio Code, Code::Blocks, or Eclipse. Alternatively, you can use a simple text editor like Sublime Text.",
          "Verify Installation: Once the compiler is installed, verify it by typing `gcc --version` in the terminal or command prompt."
        ]
      },
      {
        "section": "C Basics",
        "topics": [
          {
            "title": "Variables and Data Types",
            "code": "#include <stdio.h>\n\nint main() {\n    int age = 25;\n    float height = 5.9;\n    char initial = 'A';\n\n    printf(\"Age: %d, Height: %.1f, Initial: %c\\n\", age, height, initial);\n    return 0;\n}"
          },
          {
            "title": "Control Structures",
            "code": "#include <stdio.h>\n\nint main() {\n    int age = 20;\n\n    if (age >= 18) {\n        printf(\"You are an adult.\\n\");\n    } else {\n        printf(\"You are a minor.\\n\");\n    }\n\n    for (int i = 0; i < 5; i++) {\n        printf(\"Count: %d\\n\", i);\n    }\n\n    return 0;\n}"
          },
          {
            "title": "Functions",
            "code": "#include <stdio.h>\n\nvoid greet(char name[]) {\n    printf(\"Hello, %s!\\n\", name);\n}\n\nint main() {\n    greet(\"Alice\");\n    return 0;\n}"
          }
        ]
      },
      {
        "section": "Intermediate C",
        "topics": [
          {
            "title": "Arrays and Pointers",
            "code": "#include <stdio.h>\n\nint main() {\n    int numbers[5] = {1, 2, 3, 4, 5};\n    int *ptr = numbers;\n\n    for (int i = 0; i < 5; i++) {\n        printf(\"Number: %d, Address: %p\\n\", *(ptr + i), (ptr + i));\n    }\n\n    return 0;\n}"
          },
          {
            "title": "File I/O",
            "code": "#include <stdio.h>\n\nint main() {\n    FILE *file = fopen(\"example.txt\", \"w\");\n    if (file == NULL) {\n        printf(\"Error opening file!\\n\");\n        return 1;\n    }\n\n    fprintf(file, \"Hello, File!\\n\");\n    fclose(file);\n\n    return 0;\n}"
          },
          {
            "title": "Dynamic Memory Allocation",
            "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int *arr;\n    int size = 5;\n\n    arr = (int*) malloc(size * sizeof(int));\n\n    for (int i = 0; i < size; i++) {\n        arr[i] = i + 1;\n        printf(\"Value: %d\\n\", arr[i]);\n    }\n\n    free(arr);\n\n    return 0;\n}"
          }
        ]
      },
      {
        "section": "Advanced C",
        "topics": [
          {
            "title": "Structures",
            "code": "#include <stdio.h>\n\nstruct Student {\n    char name[50];\n    int age;\n    float grade;\n};\n\nint main() {\n    struct Student s1 = {\"Alice\", 20, 85.5};\n\n    printf(\"Name: %s, Age: %d, Grade: %.2f\\n\", s1.name, s1.age, s1.grade);\n    return 0;\n}"
          },
          {
            "title": "Pointers to Functions",
            "code": "#include <stdio.h>\n\nvoid add(int a, int b) {\n    printf(\"Sum: %d\\n\", a + b);\n}\n\nint main() {\n    void (*func_ptr)(int, int) = &add;\n    func_ptr(10, 20);\n\n    return 0;\n}"
          },
          {
            "title": "Memory Management",
            "code": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int *arr;\n    int size = 10;\n\n    arr = (int*) malloc(size * sizeof(int));\n\n    if (arr == NULL) {\n        printf(\"Memory not allocated.\\n\");\n        return 1;\n    }\n\n    for (int i = 0; i < size; i++) {\n        arr[i] = i * 2;\n        printf(\"Value: %d\\n\", arr[i]);\n    }\n\n    free(arr);\n\n    return 0;\n}"
          }
        ]
      },
      {
        "section": "Conclusion",
        "content": "Congratulations on making it through this C programming tutorial! Youâ€™ve covered everything from the basics of C to advanced topics like structures and memory management. Keep practicing and exploring the vast capabilities of C to enhance your programming skills. Happy coding!"
      }
    ]
  },
  {
    "title": "CSS Tutorial",
    "description": "This is JavaScript tutorial and this is for learning JavaScript",
    "slug": "css-tutorial",
    "date": "11/02/2025",
    "author": "Harry",
    "image": "https://images.pexels.com/photos/39284/macbook-apple-imac-computer-39284.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
    "content": [
      {
        "section": "Introduction to CSS",
        "description": "CSS is the language used to style HTML content, enabling you to control the layout, colors, fonts, and overall visual presentation of a website."
      },
      {
        "section": "Why Learn CSS?",
        "points": [
          "Styling and Layout: CSS allows you to transform plain HTML into visually appealing web pages.",
          "Responsiveness: With CSS, you can create responsive designs that adapt to different screen sizes and devices.",
          "Customizability: CSS provides the flexibility to fine-tune every aspect of your site's appearance."
        ]
      },
      {
        "section": "Setting Up CSS",
        "methods": [
          {
            "type": "Inline CSS",
            "example": "<p style=\"color: blue;\">This is a blue paragraph.</p>"
          },
          {
            "type": "Internal CSS",
            "example": "<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        p {\n            color: blue;\n        }\n    </style>\n</head>\n<body>\n    <p>This is a blue paragraph.</p>\n</body>\n</html>"
          },
          {
            "type": "External CSS",
            "example": "<link rel=\"stylesheet\" href=\"styles.css\">",
            "styles": "p {\n    color: blue;\n}"
          }
        ]
      },
      {
        "section": "CSS Basics",
        "topics": [
          {
            "title": "Selectors",
            "examples": {
              "Element Selector": "p {\n    color: green;\n}",
              "Class Selector": ".example {\n    font-size: 20px;\n}",
              "ID Selector": "#header {\n    background-color: lightgray;\n}"
            }
          },
          {
            "title": "Colors and Backgrounds",
            "examples": {
              "Text Color": "h1 {\n    color: darkblue;\n}",
              "Background Color": "body {\n    background-color: lightyellow;\n}",
              "Background Image": "div {\n    background-image: url('background.jpg');\n}"
            }
          },
          {
            "title": "Fonts and Text Styling",
            "example": "h1 {\n    font-family: Arial, sans-serif;\n    font-size: 32px;\n    text-align: center;\n    text-decoration: underline;\n}"
          }
        ]
      },
      {
        "section": "Intermediate CSS",
        "topics": [
          {
            "title": "Box Model",
            "example": "div {\n    width: 200px;\n    padding: 10px;\n    border: 1px solid black;\n    margin: 20px;\n}"
          },
          {
            "title": "Positioning",
            "example": "div {\n    position: relative;\n    top: 10px;\n    left: 20px;\n}"
          },
          {
            "title": "Flexbox",
            "example": ".container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.item {\n    flex: 1;\n    margin: 10px;\n}"
          },
          {
            "title": "Grid",
            "example": ".container {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 20px;\n}\n\n.item {\n    background-color: lightblue;\n    padding: 20px;\n}"
          }
        ]
      },
      {
        "section": "Advanced CSS",
        "topics": [
          {
            "title": "CSS Animations",
            "example": "@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\ndiv {\n    animation: fadeIn 2s ease-in-out;\n}"
          },
          {
            "title": "CSS Transitions",
            "example": "button {\n    background-color: blue;\n    transition: background-color 0.5s ease;\n}\n\nbutton:hover {\n    background-color: green;\n}"
          },
          {
            "title": "Media Queries",
            "examples": {
              "For screens wider than 600px": "@media (min-width: 600px) {\n    body {\n        background-color: lightgreen;\n    }\n}",
              "For screens narrower than 600px": "@media (max-width: 600px) {\n    body {\n        background-color: lightpink;\n    }\n}"
            }
          }
        ]
      }
    ]
  },
  {
    "title": "Tutorial Title",
    "description": "Brief description of the tutorial.",
    "slug": "tutorial-slug",
    "date": "2024-04-14",
    "author": "Author Name",
    "image": "https://i.ytimg.com/vi/yAf-XQ9Fuc4/hqdefault.jpg",
    "content": [
      {
        "section": "Section Title",
        "content": "Detailed description or list of points covered in this section."
      },
      {
        "section": "Another Section",
        "topics": [
          {
            "title": "Topic Title",
            "code": "Code snippet related to the topic."
          }
        ]
      }
    ]
  },
  {
    "title": "JavaScript Tutorial",
    "description": "This is a JavaScript tutorial for beginners and enthusiasts looking to learn JavaScript.",
    "slug": "javascript-tutorial",
    "date": "2025-03-14",
    "author": "Harry",
    "image": "https://media.geeksforgeeks.org/wp-content/uploads/20231212175241/programming-tutorial.jpg",
    "content": [
      {
        "section": "Introduction to JavaScript",
        "content": "JavaScript is a versatile language used to create dynamic and interactive effects on web pages. It is an essential skill for developers working in web development."
      },
      {
        "section": "Basics of JavaScript",
        "topics": [
          {
            "title": "Variables and Data Types",
            "code": "let message = 'Hello, world!';\nconsole.log(message);"
          },
          {
            "title": "Functions",
            "code": "function greet(name) {\n  console.log('Hello, ' + name);\n}\ngreet('Alice');"
          }
        ]
      },
      {
        "section": "Advanced JavaScript",
        "topics": [
          {
            "title": "Asynchronous JavaScript",
            "code": "async function fetchData() {\n  const response = await fetch('https://api.example.com/data');\n  const data = await response.json();\n  console.log(data);\n}\nfetchData();"
          },
          {
            "title": "JavaScript Frameworks",
            "code": "import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction App() {\n  return <h1>Hello, React!</h1>;\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"
          }
        ]
      },
      {
        "section": "Conclusion",
        "content": "You have now learned the basics and some advanced aspects of JavaScript. Continue practicing and exploring more complex projects and frameworks to enhance your skills."
      }
    ]
  }
  
]
